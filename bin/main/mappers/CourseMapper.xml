<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="gradle_mybatis_spring_study.mapper.CourseMapper">
	<sql id="selectSql">
		select course_id, name, description, start_date, end_date,
		tutor_id from courses
	</sql>

	<sql id="whereSql">
		<where>
			<if test="tutorId!= null">
				and tutor_id= #{tutorId}
			</if>
			<if test="courseName!= null">
				and name like #{courseName}
			</if>
			<if test="startDate!= null">
				and start_date &gt;= #{startDate}
			</if>
			<if test="endDate!= null">
				and end_date &lt;= #{endDate}
			</if>
		</where>
	</sql>

	<resultMap id="CourseResult" type="Course">
		<id property="courseId" column="course_id" />
		<result property="courseName" column="name" />
		<result property="description" column="description" />
		<result property="startDate" column="start_date" />
		<result property="endDate" column="end_date" />
		<result property="tutorId" column="tutor_id" />

	</resultMap>

	<select id="selectCourseByCondition" parameterType="map"
		resultMap="CourseResult">
		<include refid="selectSql" />
		<include refid="whereSql" />
	</select>

	<!--동적SQL -choose 조건 -->
	<select id="selectCaseCourse" parameterType="map"
		resultMap="CourseResult">
		<include refid="selectSql" />
		<choose>
			<when test="searchBy=='Tutor'">
				where tutor_id=#{tutorId}
			</when>
			<when test="searchBy=='CourseName'">
				where name like #{courseName}
			</when>
			<otherwise>
				where end_date %gt;=now();
			</otherwise>
		</choose>
	</select>

	<!--동적SQL -trim 조건 -->
	<select id="selectTrimCourses" parameterType="map"
		resultMap="CourseResult">
		<include refid="selectSql" />
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<!--아래tutordId!= null 조건이참이면앞부분에where 자동추가 -->
			<if test="tutorId !=null">
				tutor_id=#{tutorId}
			</if>
			<!--만약where가추가된경우and 절추가, where 존재하지않는경우where 추가하고and 제거 -->
			<if test="courseName !=null">
				and name like #{courseName}
			</if>
		</trim>
	</select>

	<select id="selectCoursesForeachByTutors" parameterType="map"
		resultMap="CourseResult">
		<include refid="selectSql" />
		<if test="tutorIds != null">
			<where>
				tutor_id IN
				<foreach collection="tutorIds" item="tutorId" index="index"
					open="(" close=")" separator=",">
					#{tutorId}
				</foreach>
			</where>
		</if>
	</select>

	<insert id="insertCourse" parameterType="map">
		insert all
		<foreach collection="tutors" item="item" separator=" "
			index="index">
			INTO COURSES VALUES(#{item.courseId}, #{item.courseName},
			#{item.description}, #{item.startDate}, #{item.endDate},
			#{item.tutorId})
		</foreach>
		select 1 from dual
	</insert>

	<delete id="deleteCourse" parameterType="map">
		delete from courses where COURSE_ID in
		<foreach collection="courseIds" item="item" separator=","
			index="index" open="(" close=")">
			#{item}
		</foreach>
	</delete>

	<update id="updateCourse" parameterType="Course">
		update courses set description = #{description}, name = #{courseName} where
		course_id = #{courseId}
	</update>

	<!-- 동적 SQL - where 조건 -->
	<sql id="whereSqlCDATA">
	<where>
		<if test="tutorId != null">
   		<![CDATA[ and tutor_id = #{tutorId}]]>
		</if>

		<if test="courseName != null">
   		<![CDATA[and name like #{courseName}]]>
		</if>
		<if test="startDate != null">
		<![CDATA[ and start_date >= #{startDate} ]]>
		</if>
		<if test="endDate != null">
		<![CDATA[ and end_date <= #{endDate} ]]>
		</if>
	</where>
	</sql>
	<select id="selectWhereCourses" parameterType="map" resultMap="CourseResult">
	<include refid="selectSql" />
	<include refid="whereSqlCDATA" />
</select>
</mapper>